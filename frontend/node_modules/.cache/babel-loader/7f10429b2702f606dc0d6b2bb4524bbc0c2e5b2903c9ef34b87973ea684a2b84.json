{"ast":null,"code":"import axios from'axios';import{jwtDecode}from'jwt-decode';const API_URL='http://localhost:5000/api/auth';export const authService={// Register user\nasync register(userData){try{const response=await axios.post(`${API_URL}/register`,userData);return response.data;}catch(error){throw error.response.data;}},// Login user\nasync login(formData){try{const response=await axios.post(`${API_URL}/login`,formData);if(response.data.token){localStorage.setItem('token',response.data.token);return response;}}catch(error){throw error.response.data;}},// Logout user\nlogout(){localStorage.removeItem('token');console.log(localStorage.getItem('token'));},// Get current user from token\ngetCurrentUser(){const token=localStorage.getItem('token');if(token){try{const decoded=jwtDecode(token);console.log(decoded);return{id:decoded.userId,email:decoded.email// Add other user details as needed\n};}catch(error){return null;}}return null;},// Check if token is valid\nisTokenExpired(){const token=localStorage.getItem('token');if(!token)return true;try{const decoded=jwtDecode(token);return decoded.exp<Date.now()/1000;}catch(error){return true;}},// Add Authorization header to axios\nsetupAxiosInterceptors(){axios.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers['Authorization']=`Bearer ${token}`;}return config;},error=>{return Promise.reject(error);});}};","map":{"version":3,"names":["axios","jwtDecode","API_URL","authService","register","userData","response","post","data","error","login","formData","token","localStorage","setItem","logout","removeItem","console","log","getItem","getCurrentUser","decoded","id","userId","email","isTokenExpired","exp","Date","now","setupAxiosInterceptors","interceptors","request","use","config","headers","Promise","reject"],"sources":["D:/myprojecct/B2B3/frontend/src/utils/authService.js"],"sourcesContent":["import axios from 'axios';\r\nimport { jwtDecode } from 'jwt-decode';\r\nconst API_URL = 'http://localhost:5000/api/auth';\r\n\r\nexport const authService = {\r\n  // Register user\r\n  async register(userData) {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/register`, userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response.data;\r\n    }\r\n  },\r\n\r\n  // Login user\r\n  async login(formData) {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/login`, formData);\r\n      if (response.data.token) {\r\n        localStorage.setItem('token', response.data.token);\r\n        return response;\r\n      }\r\n    } catch (error) {\r\n      throw error.response.data;\r\n    }\r\n  },\r\n\r\n  // Logout user\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n    console.log(localStorage.getItem('token'))\r\n  },\r\n\r\n  // Get current user from token\r\n  getCurrentUser() {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        const decoded = jwtDecode(token);\r\n        console.log(decoded);\r\n        return {\r\n          id: decoded.userId,\r\n          email: decoded.email,\r\n          // Add other user details as needed\r\n        };\r\n      } catch (error) {\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  },\r\n\r\n  // Check if token is valid\r\n  isTokenExpired() {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) return true;\r\n\r\n    try {\r\n      const decoded = jwtDecode(token);\r\n      return decoded.exp < Date.now() / 1000;\r\n    } catch (error) {\r\n      return true;\r\n    }\r\n  },\r\n\r\n  // Add Authorization header to axios\r\n  setupAxiosInterceptors() {\r\n    axios.interceptors.request.use(\r\n      (config) => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          config.headers['Authorization'] = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n      },\r\n      (error) => {\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n  }\r\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,SAAS,KAAQ,YAAY,CACtC,KAAM,CAAAC,OAAO,CAAG,gCAAgC,CAEhD,MAAO,MAAM,CAAAC,WAAW,CAAG,CACzB;AACA,KAAM,CAAAC,QAAQA,CAACC,QAAQ,CAAE,CACvB,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAN,KAAK,CAACO,IAAI,CAAC,GAAGL,OAAO,WAAW,CAAEG,QAAQ,CAAC,CAClE,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CAACH,QAAQ,CAACE,IAAI,CAC3B,CACF,CAAC,CAED;AACA,KAAM,CAAAE,KAAKA,CAACC,QAAQ,CAAE,CACpB,GAAI,CACF,KAAM,CAAAL,QAAQ,CAAG,KAAM,CAAAN,KAAK,CAACO,IAAI,CAAC,GAAGL,OAAO,QAAQ,CAAES,QAAQ,CAAC,CAC/D,GAAIL,QAAQ,CAACE,IAAI,CAACI,KAAK,CAAE,CACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAER,QAAQ,CAACE,IAAI,CAACI,KAAK,CAAC,CAClD,MAAO,CAAAN,QAAQ,CACjB,CACF,CAAE,MAAOG,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CAACH,QAAQ,CAACE,IAAI,CAC3B,CACF,CAAC,CAED;AACAO,MAAMA,CAAA,CAAG,CACPF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC,CAChCC,OAAO,CAACC,GAAG,CAACL,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC,CAAC,CAC5C,CAAC,CAED;AACAC,cAAcA,CAAA,CAAG,CACf,KAAM,CAAAR,KAAK,CAAGC,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIP,KAAK,CAAE,CACT,GAAI,CACF,KAAM,CAAAS,OAAO,CAAGpB,SAAS,CAACW,KAAK,CAAC,CAChCK,OAAO,CAACC,GAAG,CAACG,OAAO,CAAC,CACpB,MAAO,CACLC,EAAE,CAAED,OAAO,CAACE,MAAM,CAClBC,KAAK,CAAEH,OAAO,CAACG,KACf;AACF,CAAC,CACH,CAAE,MAAOf,KAAK,CAAE,CACd,MAAO,KAAI,CACb,CACF,CACA,MAAO,KAAI,CACb,CAAC,CAED;AACAgB,cAAcA,CAAA,CAAG,CACf,KAAM,CAAAb,KAAK,CAAGC,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAI,CAACP,KAAK,CAAE,MAAO,KAAI,CAEvB,GAAI,CACF,KAAM,CAAAS,OAAO,CAAGpB,SAAS,CAACW,KAAK,CAAC,CAChC,MAAO,CAAAS,OAAO,CAACK,GAAG,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAG,IAAI,CACxC,CAAE,MAAOnB,KAAK,CAAE,CACd,MAAO,KAAI,CACb,CACF,CAAC,CAED;AACAoB,sBAAsBA,CAAA,CAAG,CACvB7B,KAAK,CAAC8B,YAAY,CAACC,OAAO,CAACC,GAAG,CAC3BC,MAAM,EAAK,CACV,KAAM,CAAArB,KAAK,CAAGC,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIP,KAAK,CAAE,CACTqB,MAAM,CAACC,OAAO,CAAC,eAAe,CAAC,CAAG,UAAUtB,KAAK,EAAE,CACrD,CACA,MAAO,CAAAqB,MAAM,CACf,CAAC,CACAxB,KAAK,EAAK,CACT,MAAO,CAAA0B,OAAO,CAACC,MAAM,CAAC3B,KAAK,CAAC,CAC9B,CACF,CAAC,CACH,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}