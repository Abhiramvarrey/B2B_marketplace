{"ast":null,"code":"import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nconst API_URL = 'http://localhost:5000/api/auth';\nexport const authService = {\n  // Register user\n  async register(userData) {\n    try {\n      const response = await axios.post(`${API_URL}/register`, userData);\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n  // Login user\n  async login(email, password) {\n    try {\n      const response = await axios.post(`${API_URL}/login`, {\n        email,\n        password\n      });\n      if (response.data.token) {\n        localStorage.setItem('token', response.data.token);\n        return this.getCurrentUser();\n      }\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n  // Logout user\n  logout() {\n    localStorage.removeItem('token');\n  },\n  // Get current user from token\n  getCurrentUser() {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decoded = jwt_decode(token);\n        console.log(decoded);\n        return {\n          id: decoded.userId,\n          email: decoded.email\n          // Add other user details as needed\n        };\n      } catch (error) {\n        return null;\n      }\n    }\n    return null;\n  },\n  // Check if token is valid\n  isTokenExpired() {\n    const token = localStorage.getItem('token');\n    if (!token) return true;\n    try {\n      const decoded = jwt_decode(token);\n      return decoded.exp < Date.now() / 1000;\n    } catch (error) {\n      return true;\n    }\n  },\n  // Add Authorization header to axios\n  setupAxiosInterceptors() {\n    axios.interceptors.request.use(config => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n      }\n      return config;\n    }, error => {\n      return Promise.reject(error);\n    });\n  }\n};","map":{"version":3,"names":["axios","jwt_decode","API_URL","authService","register","userData","response","post","data","error","login","email","password","token","localStorage","setItem","getCurrentUser","logout","removeItem","getItem","decoded","console","log","id","userId","isTokenExpired","exp","Date","now","setupAxiosInterceptors","interceptors","request","use","config","headers","Promise","reject"],"sources":["D:/myprojecct/B2B3/frontend/src/utils/authService.js"],"sourcesContent":["import axios from 'axios';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nconst API_URL = 'http://localhost:5000/api/auth';\r\n\r\nexport const authService = {\r\n  // Register user\r\n  async register(userData) {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/register`, userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response.data;\r\n    }\r\n  },\r\n\r\n  // Login user\r\n  async login(email, password) {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/login`, { email, password });\r\n      if (response.data.token) {\r\n        localStorage.setItem('token', response.data.token);\r\n        return this.getCurrentUser();\r\n      }\r\n    } catch (error) {\r\n      throw error.response.data;\r\n    }\r\n  },\r\n\r\n  // Logout user\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n  },\r\n\r\n  // Get current user from token\r\n  getCurrentUser() {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        const decoded = jwt_decode(token);\r\n        console.log(decoded);\r\n        return {\r\n          id: decoded.userId,\r\n          email: decoded.email,\r\n          // Add other user details as needed\r\n        };\r\n      } catch (error) {\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  },\r\n\r\n  // Check if token is valid\r\n  isTokenExpired() {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) return true;\r\n\r\n    try {\r\n      const decoded = jwt_decode(token);\r\n      return decoded.exp < Date.now() / 1000;\r\n    } catch (error) {\r\n      return true;\r\n    }\r\n  },\r\n\r\n  // Add Authorization header to axios\r\n  setupAxiosInterceptors() {\r\n    axios.interceptors.request.use(\r\n      (config) => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          config.headers['Authorization'] = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n      },\r\n      (error) => {\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,YAAY;AAEnC,MAAMC,OAAO,GAAG,gCAAgC;AAEhD,OAAO,MAAMC,WAAW,GAAG;EACzB;EACA,MAAMC,QAAQA,CAACC,QAAQ,EAAE;IACvB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,GAAGL,OAAO,WAAW,EAAEG,QAAQ,CAAC;MAClE,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;IAC3B;EACF,CAAC;EAED;EACA,MAAME,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IAC3B,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,GAAGL,OAAO,QAAQ,EAAE;QAAES,KAAK;QAAEC;MAAS,CAAC,CAAC;MAC1E,IAAIN,QAAQ,CAACE,IAAI,CAACK,KAAK,EAAE;QACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAET,QAAQ,CAACE,IAAI,CAACK,KAAK,CAAC;QAClD,OAAO,IAAI,CAACG,cAAc,CAAC,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOP,KAAK,EAAE;MACd,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;IAC3B;EACF,CAAC;EAED;EACAS,MAAMA,CAAA,EAAG;IACPH,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;EAED;EACAF,cAAcA,CAAA,EAAG;IACf,MAAMH,KAAK,GAAGC,YAAY,CAACK,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIN,KAAK,EAAE;MACT,IAAI;QACF,MAAMO,OAAO,GAAGnB,UAAU,CAACY,KAAK,CAAC;QACjCQ,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;QACpB,OAAO;UACLG,EAAE,EAAEH,OAAO,CAACI,MAAM;UAClBb,KAAK,EAAES,OAAO,CAACT;UACf;QACF,CAAC;MACH,CAAC,CAAC,OAAOF,KAAK,EAAE;QACd,OAAO,IAAI;MACb;IACF;IACA,OAAO,IAAI;EACb,CAAC;EAED;EACAgB,cAAcA,CAAA,EAAG;IACf,MAAMZ,KAAK,GAAGC,YAAY,CAACK,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACN,KAAK,EAAE,OAAO,IAAI;IAEvB,IAAI;MACF,MAAMO,OAAO,GAAGnB,UAAU,CAACY,KAAK,CAAC;MACjC,OAAOO,OAAO,CAACM,GAAG,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;IACxC,CAAC,CAAC,OAAOnB,KAAK,EAAE;MACd,OAAO,IAAI;IACb;EACF,CAAC;EAED;EACAoB,sBAAsBA,CAAA,EAAG;IACvB7B,KAAK,CAAC8B,YAAY,CAACC,OAAO,CAACC,GAAG,CAC3BC,MAAM,IAAK;MACV,MAAMpB,KAAK,GAAGC,YAAY,CAACK,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIN,KAAK,EAAE;QACToB,MAAM,CAACC,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUrB,KAAK,EAAE;MACrD;MACA,OAAOoB,MAAM;IACf,CAAC,EACAxB,KAAK,IAAK;MACT,OAAO0B,OAAO,CAACC,MAAM,CAAC3B,KAAK,CAAC;IAC9B,CACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}