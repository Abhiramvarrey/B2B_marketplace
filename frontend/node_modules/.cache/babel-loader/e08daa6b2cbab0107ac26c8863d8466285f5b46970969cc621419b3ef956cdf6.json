{"ast":null,"code":"var _jsxFileName = \"D:\\\\myprojecct\\\\B2B3\\\\frontend\\\\src\\\\pages\\\\getallPosts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Box, Typography, Card, CardContent, Grid, CircularProgress, useTheme } from \"@mui/material\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APP_URL = process.env.GET_REACT + \"/api/getmyposts?page=${page}\";\nconst PostDashboard = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [hasMore, setHasMore] = useState(true);\n  const [page, setPage] = useState(1);\n  const theme = useTheme();\n  const fetchPosts = async () => {\n    try {\n      const response = await axios.get(APP_URL, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}` // Use appropriate token handling\n        }\n      });\n      const {\n        posts: fetchedPosts,\n        totalPages,\n        currentPage\n      } = response.data;\n      if (currentPage >= totalPages) {\n        setHasMore(false); // No more pages to load\n      }\n      setPosts(prevPosts => {\n        const newPosts = fetchedPosts.filter(newPost => !prevPosts.some(post => post._id === newPost._id));\n        return [...prevPosts, ...newPosts];\n      });\n      setPage(prevPage => prevPage + 1);\n    } catch (error) {\n      console.error(\"Error fetching posts:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      sx: {\n        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\"\n      },\n      children: \"Posts Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: posts.length,\n      next: fetchPosts,\n      hasMore: hasMore,\n      loader: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: \"center\",\n          marginTop: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this),\n      endMessage: /*#__PURE__*/_jsxDEV(Typography, {\n        align: \"center\",\n        sx: {\n          marginTop: 2\n        },\n        children: \"No more posts to show.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              backgroundColor: theme.palette.mode === \"dark\" ? \"#1e1e1e\" : \"#fff\",\n              color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: post.shopName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: [\"Deadline: \", new Date(post.deadline).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Items:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: post.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [item.name, \" - \", item.quantity]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(PostDashboard, \"/S2nOxRtjK7LrZMHg6jLlDwOWsY=\", false, function () {\n  return [useTheme];\n});\n_c = PostDashboard;\nexport default PostDashboard;\nvar _c;\n$RefreshReg$(_c, \"PostDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Box","Typography","Card","CardContent","Grid","CircularProgress","useTheme","InfiniteScroll","jsxDEV","_jsxDEV","APP_URL","process","env","GET_REACT","PostDashboard","_s","posts","setPosts","hasMore","setHasMore","page","setPage","theme","fetchPosts","response","get","headers","Authorization","localStorage","getItem","fetchedPosts","totalPages","currentPage","data","prevPosts","newPosts","filter","newPost","some","post","_id","prevPage","error","console","children","variant","align","gutterBottom","sx","color","palette","mode","fileName","_jsxFileName","lineNumber","columnNumber","dataLength","length","next","loader","textAlign","marginTop","endMessage","container","spacing","map","item","xs","md","lg","backgroundColor","shopName","Date","deadline","toLocaleDateString","items","index","name","quantity","_c","$RefreshReg$"],"sources":["D:/myprojecct/B2B3/frontend/src/pages/getallPosts.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  CircularProgress,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nconst APP_URL = process.env.GET_REACT+\"/api/getmyposts?page=${page}\"\r\nconst PostDashboard = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [page, setPage] = useState(1);\r\n  const theme = useTheme();\r\n\r\n  const fetchPosts = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        APP_URL ,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`, // Use appropriate token handling\r\n          },\r\n        }\r\n      );\r\n  \r\n      const { posts: fetchedPosts, totalPages, currentPage } = response.data;\r\n  \r\n      if (currentPage >= totalPages) {\r\n        setHasMore(false); // No more pages to load\r\n      }\r\n  \r\n      setPosts((prevPosts) => {\r\n        const newPosts = fetchedPosts.filter(\r\n          (newPost) => !prevPosts.some((post) => post._id === newPost._id)\r\n        );\r\n        return [...prevPosts, ...newPosts];\r\n      });\r\n  \r\n      setPage((prevPage) => prevPage + 1);\r\n    } catch (error) {\r\n      console.error(\"Error fetching posts:\", error);\r\n    }\r\n  };\r\n  \r\n  \r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      <Typography\r\n        variant=\"h4\"\r\n        align=\"center\"\r\n        gutterBottom\r\n        sx={{\r\n          color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n        }}\r\n      >\r\n        Posts Dashboard\r\n      </Typography>\r\n      <InfiniteScroll\r\n        dataLength={posts.length}\r\n        next={fetchPosts}\r\n        hasMore={hasMore}\r\n        loader={\r\n          <Box sx={{ textAlign: \"center\", marginTop: 2 }}>\r\n            <CircularProgress />\r\n          </Box>\r\n        }\r\n        endMessage={\r\n          <Typography align=\"center\" sx={{ marginTop: 2 }}>\r\n            No more posts to show.\r\n          </Typography>\r\n        }\r\n      >\r\n        <Grid container spacing={3}>\r\n          {posts.map((post) => (\r\n            <Grid item xs={12} md={6} lg={4} key={post._id}>\r\n              <Card\r\n                sx={{\r\n                  backgroundColor:\r\n                    theme.palette.mode === \"dark\" ? \"#1e1e1e\" : \"#fff\",\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                }}\r\n              >\r\n                <CardContent>\r\n                  <Typography variant=\"h6\">{post.shopName}</Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    Deadline: {new Date(post.deadline).toLocaleDateString()}\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\">Items:</Typography>\r\n                  <ul>\r\n                    {post.items.map((item, index) => (\r\n                      <li key={index}>\r\n                        {item.name} - {item.quantity}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </InfiniteScroll>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PostDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,GAAG,EACHC,UAAU,EACVC,IAAI,EACJC,WAAW,EACXC,IAAI,EACJC,gBAAgB,EAChBC,QAAQ,QACH,eAAe;AACtB,OAAOC,cAAc,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC7D,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,SAAS,GAAC,8BAA8B;AACpE,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACuB,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAMyB,KAAK,GAAGhB,QAAQ,CAAC,CAAC;EAExB,MAAMiB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAC9Bf,OAAO,EACP;QACEgB,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAE;QAC5D;MACF,CACF,CAAC;MAED,MAAM;QAAEb,KAAK,EAAEc,YAAY;QAAEC,UAAU;QAAEC;MAAY,CAAC,GAAGR,QAAQ,CAACS,IAAI;MAEtE,IAAID,WAAW,IAAID,UAAU,EAAE;QAC7BZ,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB;MAEAF,QAAQ,CAAEiB,SAAS,IAAK;QACtB,MAAMC,QAAQ,GAAGL,YAAY,CAACM,MAAM,CACjCC,OAAO,IAAK,CAACH,SAAS,CAACI,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKH,OAAO,CAACG,GAAG,CACjE,CAAC;QACD,OAAO,CAAC,GAAGN,SAAS,EAAE,GAAGC,QAAQ,CAAC;MACpC,CAAC,CAAC;MAEFd,OAAO,CAAEoB,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;IACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAGD5C,SAAS,CAAC,MAAM;IACdyB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEd,OAAA,CAACT,GAAG;IAAA4C,QAAA,gBACFnC,OAAA,CAACR,UAAU;MACT4C,OAAO,EAAC,IAAI;MACZC,KAAK,EAAC,QAAQ;MACdC,YAAY;MACZC,EAAE,EAAE;QACFC,KAAK,EAAE3B,KAAK,CAAC4B,OAAO,CAACC,IAAI,KAAK,MAAM,GAAG,MAAM,GAAG;MAClD,CAAE;MAAAP,QAAA,EACH;IAED;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACb9C,OAAA,CAACF,cAAc;MACbiD,UAAU,EAAExC,KAAK,CAACyC,MAAO;MACzBC,IAAI,EAAEnC,UAAW;MACjBL,OAAO,EAAEA,OAAQ;MACjByC,MAAM,eACJlD,OAAA,CAACT,GAAG;QAACgD,EAAE,EAAE;UAAEY,SAAS,EAAE,QAAQ;UAAEC,SAAS,EAAE;QAAE,CAAE;QAAAjB,QAAA,eAC7CnC,OAAA,CAACJ,gBAAgB;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CACN;MACDO,UAAU,eACRrD,OAAA,CAACR,UAAU;QAAC6C,KAAK,EAAC,QAAQ;QAACE,EAAE,EAAE;UAAEa,SAAS,EAAE;QAAE,CAAE;QAAAjB,QAAA,EAAC;MAEjD;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CACb;MAAAX,QAAA,eAEDnC,OAAA,CAACL,IAAI;QAAC2D,SAAS;QAACC,OAAO,EAAE,CAAE;QAAApB,QAAA,EACxB5B,KAAK,CAACiD,GAAG,CAAE1B,IAAI,iBACd9B,OAAA,CAACL,IAAI;UAAC8D,IAAI;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAACC,EAAE,EAAE,CAAE;UAAAzB,QAAA,eAC9BnC,OAAA,CAACP,IAAI;YACH8C,EAAE,EAAE;cACFsB,eAAe,EACbhD,KAAK,CAAC4B,OAAO,CAACC,IAAI,KAAK,MAAM,GAAG,SAAS,GAAG,MAAM;cACpDF,KAAK,EAAE3B,KAAK,CAAC4B,OAAO,CAACC,IAAI,KAAK,MAAM,GAAG,MAAM,GAAG;YAClD,CAAE;YAAAP,QAAA,eAEFnC,OAAA,CAACN,WAAW;cAAAyC,QAAA,gBACVnC,OAAA,CAACR,UAAU;gBAAC4C,OAAO,EAAC,IAAI;gBAAAD,QAAA,EAAEL,IAAI,CAACgC;cAAQ;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAa,CAAC,eACrD9C,OAAA,CAACR,UAAU;gBAAC4C,OAAO,EAAC,OAAO;gBAACI,KAAK,EAAC,eAAe;gBAAAL,QAAA,GAAC,YACtC,EAAC,IAAI4B,IAAI,CAACjC,IAAI,CAACkC,QAAQ,CAAC,CAACC,kBAAkB,CAAC,CAAC;cAAA;gBAAAtB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7C,CAAC,eACb9C,OAAA,CAACR,UAAU;gBAAC4C,OAAO,EAAC,WAAW;gBAAAD,QAAA,EAAC;cAAM;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACnD9C,OAAA;gBAAAmC,QAAA,EACGL,IAAI,CAACoC,KAAK,CAACV,GAAG,CAAC,CAACC,IAAI,EAAEU,KAAK,kBAC1BnE,OAAA;kBAAAmC,QAAA,GACGsB,IAAI,CAACW,IAAI,EAAC,KAAG,EAACX,IAAI,CAACY,QAAQ;gBAAA,GADrBF,KAAK;kBAAAxB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEV,CACL;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QAAC,GAtB6BhB,IAAI,CAACC,GAAG;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAuBxC,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV,CAAC;AAACxC,EAAA,CAnGID,aAAa;EAAA,QAIHR,QAAQ;AAAA;AAAAyE,EAAA,GAJlBjE,aAAa;AAqGnB,eAAeA,aAAa;AAAC,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}