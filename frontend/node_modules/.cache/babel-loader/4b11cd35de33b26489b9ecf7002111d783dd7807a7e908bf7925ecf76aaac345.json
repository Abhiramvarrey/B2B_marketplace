{"ast":null,"code":"var _jsxFileName = \"D:\\\\myprojecct\\\\B2B3\\\\frontend\\\\src\\\\Posts\\\\Postsystem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, Button, TextField, Typography, Grid } from \"@mui/material\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostForm = () => {\n  _s();\n  const [shopName, setShopName] = useState(\"\");\n  const [items, setItems] = useState([{\n    name: \"\",\n    quantity: \"\",\n    deadline: \"\"\n  }]);\n  const token = localStorage.getItem(\"token\"); // Get JWT from local storage\n\n  const handleAddRow = () => {\n    setItems([...items, {\n      name: \"\",\n      quantity: \"\",\n      deadline: \"\"\n    }]);\n  };\n  const handleChange = (index, field, value) => {\n    const newItems = [...items];\n    newItems[index][field] = value;\n    setItems(newItems);\n  };\n  const handleSubmit = async () => {\n    const userId = JSON.parse(atob(token.split(\".\")[1])).id; // Decode user ID from JWT\n\n    const data = {\n      userId,\n      shopName,\n      items\n    };\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/posts\", data, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Post created successfully:\", response.data);\n      // Reset form after submission\n      setShopName(\"\");\n      setItems([{\n        name: \"\",\n        quantity: \"\",\n        deadline: \"\"\n      }]);\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error creating post:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Shop Name\",\n      value: shopName,\n      onChange: e => setShopName(e.target.value),\n      margin: \"normal\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        mt: 2\n      },\n      children: \"Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), items.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Name\",\n          value: item.name,\n          onChange: e => handleChange(index, \"name\", e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Quantity\",\n          type: \"number\",\n          value: item.quantity,\n          onChange: e => handleChange(index, \"quantity\", e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Deadline\",\n          type: \"date\",\n          value: item.deadline,\n          onChange: e => handleChange(index, \"deadline\", e.target.value),\n          InputLabelProps: {\n            shrink: true\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleAddRow,\n      sx: {\n        mt: 2\n      },\n      children: \"Add Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSubmit,\n      sx: {\n        mt: 4\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(PostForm, \"Jyh9T+3sCzdqb5X02KXPl3rqYt0=\");\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","Box","Button","TextField","Typography","Grid","axios","jsxDEV","_jsxDEV","PostForm","_s","shopName","setShopName","items","setItems","name","quantity","deadline","token","localStorage","getItem","handleAddRow","handleChange","index","field","value","newItems","handleSubmit","userId","JSON","parse","atob","split","id","data","response","post","headers","Authorization","console","log","error","_error$response","message","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","label","onChange","e","target","margin","required","mt","map","item","container","spacing","mb","xs","type","InputLabelProps","shrink","onClick","color","_c","$RefreshReg$"],"sources":["D:/myprojecct/B2B3/frontend/src/Posts/Postsystem.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Box, Button, TextField, Typography, Grid } from \"@mui/material\";\r\nimport axios from \"axios\";\r\n\r\nconst PostForm = () => {\r\n  const [shopName, setShopName] = useState(\"\");\r\n  const [items, setItems] = useState([{ name: \"\", quantity: \"\", deadline: \"\" }]);\r\n  const token = localStorage.getItem(\"token\"); // Get JWT from local storage\r\n\r\n  const handleAddRow = () => {\r\n    setItems([...items, { name: \"\", quantity: \"\", deadline: \"\" }]);\r\n  };\r\n\r\n  const handleChange = (index, field, value) => {\r\n    const newItems = [...items];\r\n    newItems[index][field] = value;\r\n    setItems(newItems);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const userId = JSON.parse(atob(token.split(\".\")[1])).id; // Decode user ID from JWT\r\n\r\n    const data = {\r\n      userId,\r\n      shopName,\r\n      items,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/posts\", data, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      console.log(\"Post created successfully:\", response.data);\r\n      // Reset form after submission\r\n      setShopName(\"\");\r\n      setItems([{ name: \"\", quantity: \"\", deadline: \"\" }]);\r\n    } catch (error) {\r\n      console.error(\"Error creating post:\", error.response?.data || error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 4 }}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Create Post\r\n      </Typography>\r\n\r\n      <TextField\r\n        fullWidth\r\n        label=\"Shop Name\"\r\n        value={shopName}\r\n        onChange={(e) => setShopName(e.target.value)}\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n\r\n      <Typography variant=\"h6\" sx={{ mt: 2 }}>\r\n        Items\r\n      </Typography>\r\n\r\n      {items.map((item, index) => (\r\n        <Grid container spacing={2} key={index} sx={{ mb: 2 }}>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Name\"\r\n              value={item.name}\r\n              onChange={(e) => handleChange(index, \"name\", e.target.value)}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Quantity\"\r\n              type=\"number\"\r\n              value={item.quantity}\r\n              onChange={(e) => handleChange(index, \"quantity\", e.target.value)}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Deadline\"\r\n              type=\"date\"\r\n              value={item.deadline}\r\n              onChange={(e) => handleChange(index, \"deadline\", e.target.value)}\r\n              InputLabelProps={{ shrink: true }}\r\n              required\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n\r\n      <Button variant=\"outlined\" onClick={handleAddRow} sx={{ mt: 2 }}>\r\n        Add Row\r\n      </Button>\r\n\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit} sx={{ mt: 4 }}>\r\n        Submit\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,EAAEC,MAAM,EAAEC,SAAS,EAAEC,UAAU,EAAEC,IAAI,QAAQ,eAAe;AACxE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC;IAAEe,IAAI,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC,CAAC;EAC9E,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;EAE7C,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBP,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAEE,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC,CAAC,CAAC;EAChE,CAAC;EAED,MAAMK,YAAY,GAAGA,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,KAAK;IAC5C,MAAMC,QAAQ,GAAG,CAAC,GAAGb,KAAK,CAAC;IAC3Ba,QAAQ,CAACH,KAAK,CAAC,CAACC,KAAK,CAAC,GAAGC,KAAK;IAC9BX,QAAQ,CAACY,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACb,KAAK,CAACc,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,EAAE,CAAC,CAAC;;IAEzD,MAAMC,IAAI,GAAG;MACXN,MAAM;MACNjB,QAAQ;MACRE;IACF,CAAC;IAED,IAAI;MACF,MAAMsB,QAAQ,GAAG,MAAM7B,KAAK,CAAC8B,IAAI,CAAC,iCAAiC,EAAEF,IAAI,EAAE;QACzEG,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUpB,KAAK;QAAG;MAC9C,CAAC,CAAC;MACFqB,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEL,QAAQ,CAACD,IAAI,CAAC;MACxD;MACAtB,WAAW,CAAC,EAAE,CAAC;MACfE,QAAQ,CAAC,CAAC;QAAEC,IAAI,EAAE,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC,OAAOwB,KAAK,EAAE;MAAA,IAAAC,eAAA;MACdH,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACN,QAAQ,cAAAO,eAAA,uBAAdA,eAAA,CAAgBR,IAAI,KAAIO,KAAK,CAACE,OAAO,CAAC;IAC9E;EACF,CAAC;EAED,oBACEnC,OAAA,CAACP,GAAG;IAAC2C,EAAE,EAAE;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAChBtC,OAAA,CAACJ,UAAU;MAAC2C,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAEb5C,OAAA,CAACL,SAAS;MACRkD,SAAS;MACTC,KAAK,EAAC,WAAW;MACjB7B,KAAK,EAAEd,QAAS;MAChB4C,QAAQ,EAAGC,CAAC,IAAK5C,WAAW,CAAC4C,CAAC,CAACC,MAAM,CAAChC,KAAK,CAAE;MAC7CiC,MAAM,EAAC,QAAQ;MACfC,QAAQ;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eAEF5C,OAAA,CAACJ,UAAU;MAAC2C,OAAO,EAAC,IAAI;MAACH,EAAE,EAAE;QAAEgB,EAAE,EAAE;MAAE,CAAE;MAAAd,QAAA,EAAC;IAExC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,EAEZvC,KAAK,CAACgD,GAAG,CAAC,CAACC,IAAI,EAAEvC,KAAK,kBACrBf,OAAA,CAACH,IAAI;MAAC0D,SAAS;MAACC,OAAO,EAAE,CAAE;MAAapB,EAAE,EAAE;QAAEqB,EAAE,EAAE;MAAE,CAAE;MAAAnB,QAAA,gBACpDtC,OAAA,CAACH,IAAI;QAACyD,IAAI;QAACI,EAAE,EAAE,CAAE;QAAApB,QAAA,eACftC,OAAA,CAACL,SAAS;UACRkD,SAAS;UACTC,KAAK,EAAC,MAAM;UACZ7B,KAAK,EAAEqC,IAAI,CAAC/C,IAAK;UACjBwC,QAAQ,EAAGC,CAAC,IAAKlC,YAAY,CAACC,KAAK,EAAE,MAAM,EAAEiC,CAAC,CAACC,MAAM,CAAChC,KAAK,CAAE;UAC7DkC,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACP5C,OAAA,CAACH,IAAI;QAACyD,IAAI;QAACI,EAAE,EAAE,CAAE;QAAApB,QAAA,eACftC,OAAA,CAACL,SAAS;UACRkD,SAAS;UACTC,KAAK,EAAC,UAAU;UAChBa,IAAI,EAAC,QAAQ;UACb1C,KAAK,EAAEqC,IAAI,CAAC9C,QAAS;UACrBuC,QAAQ,EAAGC,CAAC,IAAKlC,YAAY,CAACC,KAAK,EAAE,UAAU,EAAEiC,CAAC,CAACC,MAAM,CAAChC,KAAK,CAAE;UACjEkC,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACP5C,OAAA,CAACH,IAAI;QAACyD,IAAI;QAACI,EAAE,EAAE,CAAE;QAAApB,QAAA,eACftC,OAAA,CAACL,SAAS;UACRkD,SAAS;UACTC,KAAK,EAAC,UAAU;UAChBa,IAAI,EAAC,MAAM;UACX1C,KAAK,EAAEqC,IAAI,CAAC7C,QAAS;UACrBsC,QAAQ,EAAGC,CAAC,IAAKlC,YAAY,CAACC,KAAK,EAAE,UAAU,EAAEiC,CAAC,CAACC,MAAM,CAAChC,KAAK,CAAE;UACjE2C,eAAe,EAAE;YAAEC,MAAM,EAAE;UAAK,CAAE;UAClCV,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA,GA9BwB7B,KAAK;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA+BhC,CACP,CAAC,eAEF5C,OAAA,CAACN,MAAM;MAAC6C,OAAO,EAAC,UAAU;MAACuB,OAAO,EAAEjD,YAAa;MAACuB,EAAE,EAAE;QAAEgB,EAAE,EAAE;MAAE,CAAE;MAAAd,QAAA,EAAC;IAEjE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAET5C,OAAA,CAACN,MAAM;MAAC6C,OAAO,EAAC,WAAW;MAACwB,KAAK,EAAC,SAAS;MAACD,OAAO,EAAE3C,YAAa;MAACiB,EAAE,EAAE;QAAEgB,EAAE,EAAE;MAAE,CAAE;MAAAd,QAAA,EAAC;IAElF;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC1C,EAAA,CApGID,QAAQ;AAAA+D,EAAA,GAAR/D,QAAQ;AAsGd,eAAeA,QAAQ;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}